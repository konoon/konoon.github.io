package coding_test01;

//참고 웹사이트 출처 : BAEKJOON ONLINE JUDGE
//참고 웹사이트 https://www.acmicpc.net/problem/1712
//문제 : 월드전자는 노트북을 제조하고 판매하는 회사이다.
// 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등
// A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는
// 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다.
// 노트북 가격은 C만원으로 책정되었다고 한다.
// 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이
// 총 비용(=고정비용+가변비용)보다 많아지게 된다.
// 최초로 총 수입이 총 비용보다 많아져 순이익이 발생하는 지점을
// 손익분기점(BREAK-EVEN POINT)이라고 한다.
// A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.
// 입력 : 첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다.
// A, B, C는 21억 이하의 자연수이다
// 출력 : 첫 번째 줄에 손익분기점 즉 최초로 이익이 발생하는 판매량을 출력한다.
// 손익분기점이 존재하지 않으면 -1을 출력한다.
// 예제 입력 1(예시)
// 1000 70 170
// 예제 출력 1(예시)
// 11
// 예제 입력 2(예시)
// 3 2 1
// 예제 출력 2(예시)
// -1
// 예제 입력 3(예시)
// 2100000000 9 10
// 예제 출력 3(예시)
// 2100000001


import java.util.Scanner;

public class Coding_Test02{
   public static void main(String[] args) {
      // System으로부터 in 입력 받은 값을 Scanner 클래스를
      // 참조하는 참조변수 scan에 대입 처리합니다.
      Scanner scan = new Scanner(System.in);
      
      System.out.println("첫번째 숫자를 입력해 주시기 바랍니다 ==> ");
      // Scanner 이용해서 고정비용을 입력 받고, int형 변수 A에 대입 처리함.
      int A = scan.nextInt();
      System.out.println("두번째 숫자를 입력해 주시기 바랍니다 ==> ");
      // Scanner 이용해서 가변비용을 입력 받고, int형 변수 B에 대입 처리함.
      int B = scan.nextInt();
      System.out.println("세번째 숫자를 입력해 주시기 바랍니다 ==> ");
      // Scanner 이용해서 노트북 가격을 입력 받고, int형 변수 C에 대입 처리함.
      int C = scan.nextInt();
      
      int Q = (A/(C-B)) + 1;
      /* 판매량(생산량)을 나타내는 변수임.
        * 손익분기점을 계산할 때 생산된 것은 모두 판매된다고
                    가정하기에 판매량과 생산량은 동일하다.
                    사실 손익분기점의 원래 의미는 총수입과 총비용이 같아 손실도,
                    이익도 없는 상태를 말한다. 다만 여기서는 손익분기점을
                    총수입이 총비용보다 많아져 최초의 이익이 발생하는 시점을 말하기에
                    총수입과 총비용을 같게 만드는 생산량(즉, 순수익을 0으로 만드는 생산량)에서
                    +1을 해줘야 한다. */
      
      int TC = A + (B*Q); // 총비용 = 고정비용 + (가변비용 * 생산량)
      int TR = C*Q; // 총 수익 = 노트북 가격 * 판매량
      int BEP = TR - TC; // 손익분기점 = 총수입 - 총비용
      
      // 손익본기점 > 0 : 즉, 총수입이 총비용보다 큰 상황이기에
      // 최초의 순이익이 발생하는 판매량을 출력합니다.
      if(BEP > 0) {
         System.out.println(Q);
      // 손익분기점이 0이거나 0이하일 경우에는
      // 순수익이 발생하지 않는 상황이기 때문에 -1을 출력합니다.
      } else {
         System.out.println(-1);
      }
      scan.close(); // 스트림을 닫아줌.
   }
}
